// This class was generated on Mon, 11 Dec 2017 17:19:32 CST by version 0.1 of Braintree SDK Generator
// AgreementGetRequest.cs
// @version 0.1
// @type request
// @data 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
// DO NOT EDIT
using System;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Collections.Generic;
using BraintreeHttp;

namespace PayPal.BillingAgreements
{
    /**
     * Shows details for a billing agreement, by ID.
     */
    public class AgreementGetRequest : HttpRequest
    {
        public AgreementGetRequest(string AgreementId) : base("/v1/payments/billing-agreements/{agreement_id}?", HttpMethod.Get, typeof(Agreement))
        {
            try {
                this.Path = this.Path.Replace("{agreement_id}", Uri.EscapeDataString(Convert.ToString(AgreementId) ));
            } catch (IOException ignored) {}
            
            this.ContentType =  "application/json";
        }
        
    }
}
