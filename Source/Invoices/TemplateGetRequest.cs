// This class was generated on Mon, 08 Jan 2018 16:45:19 CST by version 0.1 of Braintree SDK Generator
// TemplateGetRequest.cs
// @version 0.1
// @type request
// @data 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
// DO NOT EDIT
using System;
using System.IO;
using System.Net;
using System.Net.Http;
using System.Collections.Generic;
using BraintreeHttp;

namespace PayPal.Invoices
{
    /// <summary>
    /// Shows details for a template, by ID.
    /// </summary>
    public class TemplateGetRequest : HttpRequest
    {
        public TemplateGetRequest(string TemplateId) : base("/v1/invoicing/templates/{template_id}?", HttpMethod.Get, typeof(Template))
        {
            try {
                this.Path = this.Path.Replace("{template_id}", Uri.EscapeDataString(Convert.ToString(TemplateId) ));
            } catch (IOException) {}
            
            this.ContentType =  "application/json";
        }
        
    }
}
